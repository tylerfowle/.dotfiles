#!/usr/bin/env bash

#EG - editor gulp - open editor, create iterm layout, start gulp
ProgName="$(basename $0)"
ProgVersion="1.0.0"

sub_main(){
  echo "$ProgName $ProgVersion"
  WorkingDir=${1:-$PWD}
  DefaultHeight=$((`tput lines` / 4))
  HEIGHT=${2:-$DefaultHeight}

  IFS='%'
  osascript << EOF
tell application "iTerm"
    activate

    set myterm to (current window)
    tell myterm
        activate

        set vim_sesh to (current session)
        tell vim_sesh to set starter_sesh to (split horizontally with same profile)
        tell starter_sesh to set vagrant_sesh to (split vertically with same profile)
        tell vagrant_sesh to set git_sesh to (split vertically with same profile)

        tell application "System Events"
            repeat "$HEIGHT" times
                tell application "iTerm" to activate
                tell application "System Events" to key code 125 using {command down, control down}
              end repeat
            end tell

        tell vim_sesh to (write text "cd \"$WorkingDir\" && es")
        tell starter_sesh to (write text "cd \"$WorkingDir\" && s")
        tell vagrant_sesh to (write text "cd \"$WorkingDir\" && fragrant watch")
        tell git_sesh to (write text "cd \"$WorkingDir\" && git status")

      end tell
    end tell
EOF
}

sub_version(){
  echo "$ProgName $ProgVersion"
}

sub_help(){
  echo ""
  echo "$ProgName $ProgVersion"
  echo "Usage: $ProgName [path/to/directory/] [height]"
  echo "    height - integer, number of times to move divider down for resizing pane"
  echo ""
}

subcommand=$1
case $subcommand in
  "-v" | "--version")
    sub_version
    ;;
  "-h" | "--help")
    sub_help
    ;;
  "" | *)
    sub_main
    ;;
esac
